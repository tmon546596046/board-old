sudo: required

services:
- docker

dist: trusty
env:
  golang_version: "1.14.0"
  jenkins_version: "2.127"
  last_version: "latest"
  mysql_version: "5.7.31"
  openldap_version: "1.1.11"
  registry_ip: "dicker.io"
stages:
  - pre-merge-requests
  - ui-test
  - api-test
  - report
install:
  - echo "install"
jobs:
  - stage: ui-test
    script:
      - echo "uitest script"
      - docker pull piranhahu/dev_uibuilder:7.4
      - docker tag piranhahu/dev_uibuilder:7.4 10.111.25.119/board/dev_uibuilder:7.4
      - docker-compose -f tests/docker-compose.uibuilder.test.yml up
      - bash -c 'function uitest(){ code=$(docker inspect tests_uibuilder7.4_1 -f "{{.State.ExitCode}}"); return $code; }; uitest'
      - source /etc/profile
      - docker pull registry:2.6.2        
      - docker tag registry:2.6.2 registry:latest
      - docker pull piranhahu/dev_gomail:dev  
      - docker tag piranhahu/dev_gomail:dev 10.111.25.119/board/dev_gomail:dev
      - docker pull piranhahu/python:tavern2
      - docker tag piranhahu/python:tavern2 python:tavern2
      - sudo mkdir -p /etc/board/cert
      - sudo openssl req -x509 -newkey rsa:4096 -keyout /etc/board/cert/ca-key.pem -out /etc/board/cert/ca.pem -days 365 -nodes -subj '/CN=localhost'
      - sudo docker run --rm -v `pwd`:/data -v /etc/board/cert:/etc/board/cert python:tavern2 /data/make/prepare
      - source tests/env.cfg
      - cp tests/docker-compose.test.yml make/dev
      - cp tests/ldap_test.ldif make/dev
      - docker pull piranhahu/dev_tokenserver:dev
      - docker tag piranhahu/dev_tokenserver:dev 10.110.27.103:6000/board/dev_tokenserver:dev
      - docker-compose -f make/dev/docker-compose.test.yml up -d
      - sudo sh tests/hosts.gitlab.sh
      - docker run --rm -v `pwd`:/data/workspace/board/src/git/inspursoft/board -v /tmp:/tmp -w /data/workspace/board/src/git/inspursoft/board/tests --network host  -e GOPATH=/data/workspace/board golang:$golang_version bash -c "source env.cfg && source run.sh"
      - docker run --rm -v `pwd`/src:/go/src/git/inspursoft/board/src -v $CI_PROJECT_DIR/VERSION:/go/bin/VERSION -w /go/src/git/inspursoft/board/src/adminserver -e GO111MODULE=off golang:$golang_version go build -v -o /go/bin/adminserver
  - stage: api-test
    script:
      - echo "apitest script"

